{"version":3,"sources":["../src/trafficlight_ctrl.js"],"names":["MetricsPanelCtrl","moment","_","TimeSeries","stringToJsRegex","panelDefaults","bgColor","trafficLightSettings","lightsPerLine","width","invertScale","showValue","useDiffAsColor","showTrend","redThreshold","greenThreshold","noValueNumber","max","fontSize","fontColor","units","digits","transformationDict","spreadControls","sortLights","renderLink","linkUrl","linkTooltip","linkTargetBlank","TrafficLightCtrl","$scope","$injector","templateSrv","defaultsDeep","panel","events","on","onInitEditMode","bind","onPanelTeardown","render","onRender","onDataReceived","onDataError","percentPerLight","data","updateTraffics","series","applyRegex","seriesList","length","i","regexPattern","undefined","regexVal","id","test","toString","temp","exec","extractedtxt","slice","forEach","value","name","label","dataList","newseries","transHt","split","tra","cols","map","seriesHandler","newserie","datapoints","trend","trendClass","realvalue","push","e","rows","sortBy","o","replace","orderBy","seriesData","alias","target","addEditorTab","$timeout","cancel","nextTickPromise","link","scopedVars","format","scoped","key","trafficsperline","lines","metrics","scope","elem","attrs","ctrl","$panelContainer","find","css","setTimeout","renderingCompleted","templateUrl"],"mappings":"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","file":"trafficlight_ctrl.js","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport moment from 'moment';\nimport _ from 'lodash';\nimport TimeSeries from 'app/core/time_series';\n\nimport './css/trafficlight-panel.css!';\nimport { stringToJsRegex } from '@grafana/data';\n\nconst panelDefaults = {\n  bgColor: null\n  ,trafficLightSettings:\n  {\n    lightsPerLine:5,\n    width:20,\n    invertScale:false,\n    showValue:true,\n    useDiffAsColor:false,\n    showTrend:true,\n    redThreshold:20,\n    greenThreshold:80,\n    noValueNumber:null,\n    max:100,\n    fontSize:'12px',\n    fontColor: 'black',\n    units:'',\n    digits:1,\n    transformationDict:'source1=target1;source2=target2',\n    spreadControls:false,\n    sortLights:false,\n    renderLink:false,\n    linkUrl: \"\",\n    linkTooltip: \"\",\n    linkTargetBlank:false\n  }\n};\n\n\n\nexport class TrafficLightCtrl extends MetricsPanelCtrl {\n  constructor($scope, $injector, templateSrv) {\n    super($scope, $injector);\n    _.defaultsDeep(this.panel, panelDefaults);\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('panel-teardown', this.onPanelTeardown.bind(this));\n    this.events.on('panel-initialized', this.render.bind(this));\n\n    this.events.on('render', this.onRender.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n\n    this.percentPerLight=100;\n\n    this.data=[]\n    this.templateSrv = templateSrv\n    this.updateTraffics();\n  }\n\n\n\n  onDataError() {\n    this.series = [];\n    this.render();\n  }\n\n  onRender() {\n    //this.data = this.parseSeries(this.series);\n    this.applyRegex();\n  }\n  applyRegex(){\n    let seriesList = this.series;\n    if (seriesList && seriesList.length > 0) {\n      for (let i = 0; i < seriesList.length; i++) {\n        if (this.panel.trafficLightSettings.regexPattern !== '' && this.panel.trafficLightSettings.regexPattern !== undefined) {\n          const regexVal = stringToJsRegex(this.panel.trafficLightSettings.regexPattern);\n          if (seriesList[i].id && regexVal.test(seriesList[i].id.toString())) {\n            const temp = regexVal.exec(seriesList[i].id.toString());\n            if (!temp) {\n              continue;\n            }\n            let extractedtxt = '';\n            if (temp.length > 1) {\n              temp.slice(1).forEach((value, i) => {\n                if (value) {\n                  extractedtxt += extractedtxt.length > 0 ? ' ' + value.toString() : value.toString();\n                }\n              });\n              this.data[i].name = extractedtxt;\n            }\n          }\n          else {\n            this.data[i].name = seriesList[i].id;\n            seriesList[i].label = seriesList[i].id;\n  \n          }\n        }\n        else {\n          this.data[i].name = seriesList[i].id;\n          seriesList[i].label = seriesList[i].id;\n\n        }\n      }\n    }\n  }\n\n\n\n  onDataReceived(dataList) {\n    var newseries=[]\n    var transformationDict=this.panel.trafficLightSettings.transformationDict;\n\n    var transHt={}\n    \n    for(var tra of transformationDict.split(';'))\n    {\n      var cols=tra.split('=');\n      if(cols.length>=2)\n      {\n        transHt[cols[0]]=cols[1]\n      }\n    }\n    try\n    {\n      this.series = dataList.map(this.seriesHandler.bind(this));\n\n\n\n      for(var i =0;i<this.series.length;i++)\n      {\n        var newserie={\n          \"name\":this.series[i].label,\n          \"value\":this.series[i].datapoints.slice(-1)[0][0]\n        }\n\n        if(this.series[i].datapoints.length>1)\n        {\n          newserie.trend=newserie.value-this.series[i].datapoints.slice(-2)[0][0]\n\n          if(newserie.trend>0)\n            if(this.panel.trafficLightSettings.invertScale)\n              newserie.trendClass='traffic-light-trend-bad'\n            else\n              newserie.trendClass='traffic-light-trend-good'\n          else if(newserie.trend<0)\n            if(this.panel.trafficLightSettings.invertScale)\n              newserie.trendClass='traffic-light-trend-good'\n            else\n              newserie.trendClass='traffic-light-trend-bad'\n          else\n            newserie.trendClass='traffic-light-trend-neutral'\n        }\n        newserie.realvalue=newserie.value;\n        if (this.panel.trafficLightSettings.useDiffAsColor)\n          newserie.value=newserie.trend;\n        if (transHt[newserie[\"name\"]])\n          newserie[\"tname\"]=transHt[newserie[\"name\"]]\n        else\n          newserie[\"tname\"]=newserie[\"name\"]\n        newseries.push(newserie);\n      }\n\n    }\n    catch(e)\n    {\n      // This is not a time serie\n      this.series=[];\n      for(var i=0;i<dataList[0].rows.length;i++)\n      {\n        var newserie={\n          \"name\":dataList[0].rows[i][0],\n          \"value\":dataList[0].rows[i][1],\n          \"realvalue\":dataList[0].rows[i][1]\n        }\n        \n        if (transHt[newserie[\"name\"]])\n          newserie[\"tname\"]=transHt[newserie[\"name\"]]\n        else\n          newserie[\"tname\"]=newserie[\"name\"]\n    \n        newseries.push(newserie);\n      }\n    }\n\n    \n    \n\n    if(this.panel.trafficLightSettings.sortLights)\n    {\n      this.data=_.sortBy(newseries, [function(o) { return o.name.replace(\":\",\"\").replace(\" \",\"\").replace(\"}\",\"\").replace(\"{\",\"\") }]);\n    }\n    else\n    {\n      if(this.panel.trafficLightSettings.invertScale)\n        this.data=_.orderBy(newseries, 'value','desc');\n      else\n        this.data=_.orderBy(newseries, 'value','asc');\n    }   \n    this.applyRegex(); \n  }\n\n  seriesHandler(seriesData) {\n    var series = new TimeSeries({\n      datapoints: seriesData.datapoints,\n      alias: seriesData.target\n    });\n    return series;\n  }\n\n  onInitEditMode() {\n\n    this.addEditorTab('Options', 'public/plugins/snuids-trafficlights-panel/editor.html', 2);\n  }\n\n  onPanelTeardown() {\n    this.$timeout.cancel(this.nextTickPromise);\n  }\n\n  renderLink(link, scopedVars, format){\n    var scoped = {}\n    for (var key in scopedVars) {\n        scoped[key] = { value: scopedVars[key] }\n    }\n    if (format) {\n        return this.templateSrv.replace(link, scoped, format)\n    } else {\n        return this.templateSrv.replace(link, scoped)\n    }\n  }\n\n  updateTraffics() {\n\n    var trafficsperline=this.panel.trafficLightSettings.lightsPerLine;\n\n    if(this.panel.trafficLightSettings.spreadControls)\n    {\n      trafficsperline=this.data.length;\n      if(this.data.length==0)\n        trafficsperline=1;\n      this.percentPerLight=100/trafficsperline;\n    }\n    else\n      this.percentPerLight=100/trafficsperline;\n\n    this.lines=[];\n    var metrics=[];\n    for(var i=0;i<this.data.length;i++)\n    {\n      if((i%trafficsperline)==0)\n\t\t\t{\n\t\t\t\tmetrics=[];\n\t\t\t\tthis.lines.push(metrics);\n      }\n      metrics.push(this.data[i]);\n    }\n    this.nextTickPromise = this.$timeout(this.updateTraffics.bind(this), 1000);\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    this.events.on('render', () => {\n      const $panelContainer = elem.find('.panel-container');\n\n      if (this.panel.bgColor) {\n        $panelContainer.css('background-color', this.panel.bgColor);\n      } else {\n        $panelContainer.css('background-color', '');\n      }\n      setTimeout(() => ctrl.renderingCompleted(), 1250);\n    });\n  }\n}\n\nTrafficLightCtrl.templateUrl = 'module.html';\n"]}